{"version":3,"sources":["whenBarmenPourWhiskyTests.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAEA,MAAM,yBAAN,EAAiC,YAAY;AACzC,UAAM,YAAY,CAEjB,CAFD;;AAIA;AACA,UAAM,gBAAN,EAAwB,YAAY;AAChC,aAAK,wBAAL,EAA+B,YAAY;AACvC,6BAAO,KAAP,CAAa,EAAb,EAAiB,kBAAK,EAAL,CAAjB;AACH,SAFD;AAGH,KAJD;;AAMA;AACA,UAAM,0BAAN,EAAkC,YAAW;AACzC,aAAK,mBAAL,EAA0B,YAAW;AACjC,6BAAO,KAAP,CAAa,EAAb,EAAiB,kBAAK,EAAL,CAAjB;AACH,SAFD;;AAIA,aAAK,wBAAL,EAA+B,YAAW;AACtC,6BAAO,KAAP,CAAa,EAAb,EAAiB,kBAAK,EAAL,CAAjB;AACH,SAFD;;AAIA,aAAK,kCAAL,EAAyC,YAAW;AAChD,6BAAO,KAAP,CAAa,EAAb,EAAiB,kBAAK,EAAL,CAAjB;AACH,SAFD;AAGH,KAZD;AAaH,CA1BD;;AA+BA;AACA;AACA;AACA;AACA","file":"whenBarmenPourWhiskyTests-compiled.js","sourcesContent":["import assert from 'assert'\nimport { pour } from '../src/barmen'\n\nsuite('when barmen pour whisky', function () {\n    setup(function () {\n\n    });\n\n    // * <Arrange>.<Assert>\n    suite('i ask 50 grams', function () {\n        test('get 50 grams of whisky', function () {\n            assert.equal(50, pour(50));\n        });\n    });\n\n    //<Assert>.<Arrange>\n    suite('I get 50 grams of whisky', function() {\n        test('if barmen is free', function() {\n            assert.equal(50, pour(50));\n        });\n\n        test('if I won a promo glass', function() {\n            assert.equal(50, pour(50));\n        });\n\n        test('My friend ordered 50 grams to me', function() {\n            assert.equal(50, pour(50));\n        })\n    });\n});\n\n\n\n\n// * When<Action>.<Arrange><Assert>\n// * <Arrange>.<Assert>\n// * <Assert>.<Arrange>\n// * <ClassName>Should.<Act><Assert>\n// * <ClassNameTests>.<Act>_<Arrange>_<Assert>"]}